# Keyword Lists

A `Keyword` list is a list of key-value pairs that has three special characteristics:

1. Keys must be `Atom`s.
1. The key-value pairs are ordered.
1. Keys can be duplicated.

Here's how to use keyword lists:

```elixir
keyword = [name: "Peter", age: 21, name: "Pietah"]

# Access an element using the bracket notation
keyword[:age] |> IO.inspect(label: 1)

# But it will only return the first key
keyword[:name] |> IO.inspect(label: 2)

# You can also use a helper function
Keyword.get(keyword, :age) |> IO.inspect(label: 3)

# Replace an existing value with a new one
Keyword.replace(keyword, :age, 22) |> IO.inspect(label: 6)

# When you update a duplicate key, it will only keep the new value and remove the rest
Keyword.replace(keyword, :name, "Pieter") |> IO.inspect(label: 7)

# Delete all pairs that have a given key
Keyword.delete(keyword, :name) |> IO.inspect(label: 8)

# Only delete the first occurrence
Keyword.delete_first(keyword, :name) |> IO.inspect(label: 9)
```

<!-- livebook:{"output":true} -->

```
1: 21
2: "Peter"
3: 21
4: {:ok, 21}
5: 21
6: [name: "Peter", age: 22, name: "Pietah"]
7: [name: "Pieter", age: 21]
8: [age: 21]
9: [age: 21, name: "Pietah"]
```